name: CICD

on:
  push:
    branches:
      - main
      - feature
  pull_request:
    branches:
      - main
env:
 DATABASE_URL: ${{ secrets.KEY_DB }}
 S3_BUCKET_1: ${{ secrets.KEY_BUCKET_1 }}
 S3_BUCKET_2: ${{ secrets.KEY_BUCKET_2 }}
 S3_BUCKET_3: ${{ secrets.KEY_BUCKET_3 }}
 JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
 JWT_REFRESH_SECRET_KEY: ${{ secrets.JWT_REFRESH_SECRET_KEY }}
 AWS_REGION: eu-north-1
 ECR_REPOSITORY: projects-dev


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Specify your Python version
          cache: poetry
      
      - name: Install Python dependencies
        run: poetry install

      - name: Run Ruff for linting and formatting checks
        run: poetry run ruff check .

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest  # Use a static tag

        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT  
      


